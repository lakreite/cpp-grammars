#include<iostream>
#include<cassert>
#include<string>
#include"complex.hpp"
using std::cout;
using std::endl;
int main(){ 
    Complex a(1,1), b(2, 2), c(4, 4),tempobj;
    assert((cout<<"TTT: tesitng a==a: ",a==a));
    cout<<"true"<<endl;
    assert(!(a!=a));
    assert((cout<<"TTT: testing (a!=a)==0: ",!(a!=a)));
    cout<<"true"<<endl;
    cout<<"a: "<<a<<" b: "<<b<<" c: "<<c<<endl;
    assert((cout<<"TTT: testing constructor: ",(a==Complex(1,1))&&(b==Complex(2,2))&&(c==Complex(4,4))));
    cout<<"true"<<endl;
    //cout<<"b = c: "<<(b = c)<<endl;
    assert((cout<<"TTT: testing b=c: ", ((b=c)==b)&&(b==c)));
    cout<<"true"<<endl;
    c = {8,7};
    cout<<"b: "<<b<<" c: "<<c<<endl;
    //cout<<"(a=b)=c: "<<((a=b)=c)<<endl;
    assert((cout<<"TTT: testing (a=b)=c: ",(((a=b)=c)==a)&&(a!=b)&&(b!=c)));
    cout<<"true"<<endl;
    cout<<"a: "<<a<<endl;
    a = {1,1};
    b = {2,2};
    c = {3,3};
    cout<<"a: "<<a<<" b: "<<b<<" c: "<<c<<endl;
    //cout<<"a=b=c"<<(a=b=c)<<endl;
    assert((cout<<"TTT tesing result a=b=c",((a=b=c)==a)&&(a==b)&&(b==c)));
    cout<<"true"<<endl;
    cout<<"a: "<<a<<" b: "<<b<<" c: "<<c<<endl;
    //cout<<"a==b: "<<(a==b)<<endl;
    assert((cout<<"TTT: testing result a==b: ",a==b));
    cout<<"true"<<endl;
    //cout<<"a!=b: "<<(a!=b)<<endl;
    assert((cout<<"TTT: testing result a!=b: ",!(a!=b)));
    cout<<"true"<<endl;
    a = {1,1};
    b = {1,-1};
    //cout<<"a: "<<a<<" b: "<<b<<endl;
    //cout<<"a==b: "<<(a==b)<<endl;
    //cout<<"a!=b: "<<(a!=b)<<endl;
    b = {0, 1};
    //cout<<"b: "<<b<<endl;
    //cout<<"a==b: "<<(a==b)<<endl;
    //cout<<"a!=b: "<<(a!=b)<<endl;
    //cout<<"2 * a: "<<(2 * a)<<endl;
    assert((cout<<"TTT: testing result of a*2: ", (2 * a)==Complex(2,2)));
    cout<<"true"<<endl;
    cout<<"a * 2: "<<(a * 2)<<endl;
    assert((cout<<"TTT: testing result of a*2: ",(a * 2)==Complex(2,2)));
    cout<<"true"<<endl;
    cout<<"a + 8: "<<(a + 8)<<endl;
    assert((cout<<"TTT: testing result a + 8: ",(a + 8)==Complex(9,1)));
    cout<<"8 + a: "<<(8 + a)<<endl;
    assert((cout<<"TTT: testing result 8 + a: ",(8 + a)==Complex(9,1)));
    cout<<"true"<<endl;
    cout<<"a / 8: "<<(a/8)<<endl;
    assert((cout<<"TTT: testing result a / 8: ",(a / 8)==Complex(0.125,0.125)));
    cout<<"true"<<endl;
    cout<<"8 / a: "<<(8/a)<<endl;
    assert((cout<<"TTT: testing result 8 / a: ",(8 / a)==Complex(4,-4)));
    cout<<"true"<<endl;
    tempobj = a;
    cout<<"a += 8: "<< (a+=8)<<endl;
    assert((cout<<"TTT: testing result a+=8: ",((tempobj+=8)==Complex(9,1))&&(tempobj==Complex(9,1))));
    cout<<"true"<<endl;
    cout<<"a: "<<a<<endl;
    cout<<"a -= 8: "<<(a-=8)<<endl;
    assert((cout<<"TTT: testing result a-=8: ",((tempobj-=8)==Complex(1,1))&&(tempobj==Complex(1,1))));
    cout<<"true"<<endl;
    cout<<"a: "<<a<<endl;
    cout<<"b: "<<b<<endl;
    cout<<"a += b: "<<(a+=b)<<endl;
    assert((cout<<"TTT: testing result a+=b: ",((tempobj+=b)==Complex(1,2))&&(tempobj==Complex(1,2))));
    cout<<"true"<<endl;
    cout<<"a: "<<a<<endl;
    cout<<"c: "<<c<<endl;
    cout<<"a = b+= c: "<<(tempobj = (a=b+=c))<<endl;
    assert((cout<<"TTT: testing result a= b+=c: ", (c==Complex(3,3))&&(b==Complex(3,4))&&(a==Complex(3,4)&&(tempobj==a))));
    cout<<"true"<<endl;
    cout<<"a: "<<a<<" b: "<<b<<" c: "<<c<<endl;
    a = {1, 1};
    cout<<"a: "<<a<<endl;
    cout<<"a = b-= c: "<<(a=b-=c)<<endl;
    assert((c==Complex(3,3))&&(b==Complex(0,1))&&(a==Complex(0,1)));
    cout<<"a: "<<a<<" b: "<<b<<" c: "<<c<<endl;
    cout<<"a + b: "<<(a+b)<<endl;
    assert((a+b)==Complex(0,2));
    cout<<"a - b: "<<(a-b)<<endl;
    assert((a-b)==Complex(0,0));
    cout<<"-b + a: "<<(-b+a)<<endl;
    assert((-b+a)==Complex(0,0));
    cout<<"5 - b + a * 2: "<<(5 - b + a * 2)<<endl;
    assert((5 - b + a * 2)==Complex(5,1));
    cout<<"a: "<<a<<" b: "<<b<<endl;
    cout<<"c = a + b: "<<(c=a+b)<<endl;
    assert(c==Complex(0,2));
    cout<<"c: "<<c<<endl;
    cout<<"c = a - b: "<<(c=a-b)<<endl;
    assert(c==Complex(0,0));
    cout<<"c: "<<c<<endl;
    cout<<"a, b: "<<a<<" "<<b<<endl;
    cout<<"a*b: "<<(a*b)<<endl;
    assert((a*b)==Complex(-1,0));
    cout<<"a/b: "<<(a/b)<<endl;
    assert((a/b)==Complex(1,0));
    a = {1, 1};
    b = {1, -1};
    cout<<"a, b: "<<a<<" "<<b<<endl;
    cout<<"a * b: "<<(a*b)<<endl;
    assert((a*b)==Complex(2,0));
    cout<<"a / b: "<<(a/b)<<endl;
    assert((a/b)==Complex(0,1));
    //unary operations:
    a = {1,1};
    assert((cout<<"TTT: testing +a==1+i: ",(+a)==Complex(1,1)));
    cout<<"true"<<endl;
    assert((cout<<"TTT: testing result of -a: ",((-a)==Complex(-1,-1))&&(a==Complex(1,1))));
    cout<<"true"<<endl;
    assert((cout<<"TTT: testing result of ++a: ",(++a)==Complex(2,1)));
    cout<<"true, testing sife-effect: ";
    assert(a==Complex(2,1));
    cout<<"true"<<endl;
    assert((cout<<"TTT: testing result of a++: ",(a++)==Complex(2,1)));
    cout<<"true, testing side-effect: ";
    assert(a==Complex(3,1));
    cout<<"true"<<endl;
    assert((cout<<"TTT: testing result of --a: ",(--a)==Complex(2,1)));
    cout<<"true, testing side-effect: ";
    assert(a==Complex(2,1));
    cout<<"true"<<endl;
    assert((cout<<"TTT: testing result of a--: ", (a--)==Complex(2,1)));
    cout<<"true, testing side-effect: ";
    assert(a==Complex(1,1));
    cout<<"true"<<endl;
    assert((cout<<"TTT: testing Complex to double conversion: ", static_cast<double>(a)==1.));
    cout<<"true"<<endl;
}
